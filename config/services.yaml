# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            #Managers
            App\Contracts\Managers\Pagination\PaginateManagerInterface: '@App\Managers\Pagination\PaginateManager'
            App\Contracts\Managers\Validation\ValidateManagerInterface: '@App\Managers\Validation\ValidateManager'


            #Repositories
            App\Contracts\Repositories\Location\LocationRepositoryInterface: '@App\Repository\Location\LocationRepository'
            App\Contracts\Repositories\Episode\EpisodeRepositoryInterface: '@App\Repository\Episode\EpisodeRepository'
            App\Contracts\Repositories\Character\CharacterRepositoryInterface: '@App\Repository\Character\CharacterRepository'


            #Mappers
            #Character
            App\Contracts\Mappers\In\Character\ChangeCharacterDtoMapperInterface: '@App\Utils\Mappers\In\Character\ChangeCharacterDtoMapper'
            App\Contracts\Mappers\In\Character\CharacterFilterDtoMapperInterface: '@App\Utils\Mappers\In\Character\CharacterFilterDtoMapper'
            App\Contracts\Mappers\In\Character\CreateCharacterDtoMapperInterface: '@App\Utils\Mappers\In\Character\CreateCharacterDtoMapper'
            App\Contracts\Mappers\In\Character\GetCharactersDtoMapperInterface: '@App\Utils\Mappers\In\Character\GetCharactersDtoMapper'
            App\Contracts\Mappers\In\Character\UpdateCharacterDtoMapperInterface: '@App\Utils\Mappers\In\Character\UpdateCharacterDtoMapper'
            App\Contracts\Mappers\Out\Character\CharacterDtoMapperInterface: '@App\Utils\Mappers\Out\Character\CharacterDtoMapper'

            #Episode
            App\Contracts\Mappers\In\Episode\ChangeEpisodeDtoMapperInterface: '@App\Utils\Mappers\In\Episode\ChangeEpisodeDtoMapper'
            App\Contracts\Mappers\In\Episode\EpisodeFilterDtoMapperInterface: '@App\Utils\Mappers\In\Episode\EpisodeFilterDtoMapper'
            App\Contracts\Mappers\In\Episode\CreateEpisodeDtoMapperInterface: '@App\Utils\Mappers\In\Episode\CreateEpisodeDtoMapper'
            App\Contracts\Mappers\In\Episode\GetEpisodesDtoMapperInterface: '@App\Utils\Mappers\In\Episode\GetEpisodesDtoMapper'
            App\Contracts\Mappers\In\Episode\UpdateEpisodeDtoMapperInterface: '@App\Utils\Mappers\In\Episode\UpdateEpisodeDtoMapper'
            App\Contracts\Mappers\Out\Episode\EpisodeDtoMapperInterface: '@App\Utils\Mappers\Out\Episode\EpisodeDtoMapper'

            #Location
            App\Contracts\Mappers\In\Location\ChangeLocationDtoMapperInterface: '@App\Utils\Mappers\In\Location\ChangeLocationDtoMapper'
            App\Contracts\Mappers\In\Location\LocationFilterDtoMapperInterface: '@App\Utils\Mappers\In\Location\LocationFilterDtoMapper'
            App\Contracts\Mappers\In\Location\CreateLocationDtoMapperInterface: '@App\Utils\Mappers\In\Location\CreateLocationDtoMapper'
            App\Contracts\Mappers\In\Location\GetLocationsDtoMapperInterface: '@App\Utils\Mappers\In\Location\GetLocationsDtoMapper'
            App\Contracts\Mappers\In\Location\UpdateLocationDtoMapperInterface: '@App\Utils\Mappers\In\Location\UpdateLocationDtoMapper'
            App\Contracts\Mappers\Out\Location\LocationDtoMapperInterface: '@App\Utils\Mappers\Out\Location\LocationDtoMapper'
            App\Contracts\Mappers\Out\Location\ShortLocationDtoMapperInterface: '@App\Utils\Mappers\Out\Location\ShortLocationDtoMapper'

            #Pagination
            App\Contracts\Mappers\Paginate\PaginateDtoMapperInterface: '@App\Utils\Mappers\Paginate\PaginateDtoMapper'
            App\Contracts\Mappers\Paginate\PaginateInfoDtoMapperInterface: '@App\Utils\Mappers\Paginate\PaginateInfoDtoMapper'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    #Normalizers
    App\Serializers\Normalizers\Exception\ExceptionNormalizer:
        tags: [ 'serializer.normalizer' ]

    #Listeners
    App\Listeners\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }
